{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.8.0.0",
        "fileVersion": "4.8.0-7.24067.24 (26357112)",
        "semanticVersion": "4.8.0"
      },
      "results": [
        {
          "ruleId": "S2342",
          "level": "warning",
          "message": "Rename this enumeration to match the regular expression: '^([A-Z]{1,3}[a-z0-9]+)*([A-Z]{2})?s$'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/martin/Workspace/learn-craft/src/LearnCraft.Domain/Cachorro.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 13,
                  "endLine": 13,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2345",
          "level": "warning",
          "message": "Initialize all the members of this 'Flags' enumeration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/martin/Workspace/learn-craft/src/LearnCraft.Domain/Cachorro.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 13,
                  "endLine": 13,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2346",
          "level": "warning",
          "message": "Rename 'none' to 'None'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///home/martin/Workspace/learn-craft/src/LearnCraft.Domain/Cachorro.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 5,
                  "endLine": 15,
                  "endColumn": 9
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "S2342": {
          "id": "S2342",
          "shortDescription": "Enumeration types should comply with a naming convention",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks that all enum names match a provided regular expression.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2342",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2345": {
          "id": "S2345",
          "shortDescription": "Flags enumerations should explicitly initialize all their members",
          "fullDescription": "When you annotate an Enum with the Flags attribute, you must not rely on the values that are automatically set by the language to the Enum members, but you should define the enumeration constants in powers of two (1, 2, 4, 8, and so on). Automatic value initialization will set the first member to zero and increment the value by one for each subsequent member. As a result, you wonâ€™t be able to use the enum members with bitwise operators.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2345",
          "properties": {
            "category": "Minor Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2346": {
          "id": "S2346",
          "shortDescription": "Flags enumerations zero-value members should be named \"None\"",
          "fullDescription": "An enumeration can be decorated with the FlagsAttribute to indicate that it can be used as a bit field: a set of flags, that can be independently set and reset.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2346",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}